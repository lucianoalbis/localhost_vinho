<?xml version="1.0" encoding="UTF-8"?>
<project name="psx" default="build" basedir=".">
	<description>PSX build script</description>

    <condition property="properties-file" value="build-win" else="build-default">
        <os family="windows" />
    </condition>

    <property file="${properties-file}.properties" />

    <!-- ############################# INSTALL ############################# -->
    <!-- delete git dir -->
    <target name="delete-git-dir">
        <delete dir="${build}" />
    </target>

    <!-- clone the repository -->
    <target name="git-clone">
        <exec executable="${git}" failonerror="true">
            <arg line="clone https://github.com/k42b3/psx.git ${build}" />
        </exec>
        <exec dir="${build}" executable="${git}" failonerror="true">
            <arg line="checkout ${branch}" />
        </exec>
    </target>

    <!-- composer install -->
    <target name="composer-install">
        <exec dir="${build}" executable="${composer}" failonerror="true">
            <arg line="install" />
        </exec>
    </target>

    <!-- after this target we have an system with all dependencies installed -->
    <target name="init" depends="delete-git-dir,git-clone,composer-install" />

    <!-- ############################## TESTS ############################## -->
    <!-- syntax check of all files -->
    <target name="syntax-check">
        <exec executable="${shell}" failonerror="true">
            <arg line="${check-syntax}" />
        </exec>
    </target>

    <!-- run phpunit tests -->
    <target name="phpunit">
        <exec dir="${build}" executable="${phpunit}" failonerror="true" />
    </target>

    <!-- this target runs all tests -->
    <target name="test" depends="init,syntax-check,phpunit" />

    <!-- ############################## CLEAN ############################## -->
    <!-- removes all files wich are not needed in the release -->
    <target name="remove-files">
		<delete dir="${build}/.git" />
		<delete dir="${build}/build" />
		<delete dir="${build}/tests" />
		<delete file="${build}/.travis.yml" />
		<delete file="${build}/phpunit.xml" />
		<delete file="${build}/TODO.md" />
        <delete includeemptydirs="true">
            <fileset dir="${build}/cache" includes="*" />
        </delete>
    </target>

    <!-- clean build -->
    <target name="clean" depends="remove-files" />

    <!-- ############################## BUILD ############################## -->
    <!-- returns the current version -->
    <target name="get-version">
        <exec executable="${php}" failonerror="true" outputproperty="version">
            <arg line="get-version.php" />
        </exec>
        <echo message="Building version ${version}" />
    </target>

    <!-- creates the archive -->
    <target name="create-archive" depends="get-version">
        <tar destfile="psx_${version}.tar" basedir="${build}" />
        <gzip destfile="psx_${version}.tar.gz" src="psx_${version}.tar" />
        <delete file="psx_${version}.tar" />
        <zip destfile="psx_${version}.zip" basedir="${build}" />
    </target>

    <!-- builds the archive -->
    <target name="build" depends="test,clean,create-archive" />

    <!-- ############################## DOCUMENTATION ###################### -->
	<target name="doc-clean">
		<delete>
			<fileset dir="${build}/doc/manual" includes="**/*.html" erroronmissingdir="false" />
			<fileset dir="${build}/doc/api" includes="**/*.html" erroronmissingdir="false" />
		</delete>
	</target>

	<target name="doc-manual">
		<mkdir dir="${build}/doc/manual" />
		<exec dir="${build}" executable="${sphinx-build}" failonerror="true">
			<arg line="doc doc/manual" />
		</exec>
		<delete includeemptydirs="true">
			<fileset dir="${build}/doc">
				<include name="**" />
				<exclude name="manual/" />
				<exclude name="api/" />
			</fileset>
		</delete>
	</target>

	<target name="doc-api">
		<mkdir dir="${build}/doc/api" />
		<exec dir="${build}" executable="${apigen}" failonerror="true">
			<arg line="-s library -d doc/api" />
		</exec>
	</target>

	<target name="doc" depends="doc-clean,doc-manual,doc-api" />
</project>
